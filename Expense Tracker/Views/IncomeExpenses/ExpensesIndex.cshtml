@model Expense_Tracker.ViewModels.ExpensesViewModel

@{
    ViewData["Title"] = "Expenses Index";
}

@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

@functions {
    public string WordWrap(string text, int wordsPerLine)
    {
        if (string.IsNullOrEmpty(text))
            return text;

        var words = text.Split(' ');
        var wrappedText = new System.Text.StringBuilder();

        for (int i = 0; i < words.Length; i++)
        {
            wrappedText.Append(words[i]);

            if ((i + 1) % wordsPerLine == 0 && i != words.Length - 1)
                wrappedText.Append("<br /> "); // Insert a line break after every seven words
            else
                wrappedText.Append(" ");
        }

        return wrappedText.ToString().Trim();
    }
}

<div class="container-fluid">
    <div class="card">
        <div class="card-body">
            <div class="d-flex justify-content-between mb-4">
                <h5 class="card-title fw-semibold">Expenses</h5>
            </div>

            <div class="d-flex justify-content-end mb-4" style="margin-right: 10%;">
                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addExpenseModal">
                    Add Expense
                </button>
            </div>

            <!-- Table to display the list of expenses -->
            <div class="table-responsive">
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Amount</th>
                            <th>Description</th>
                            <th>Date</th>
                            <th>Category</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Expenses.Any())
                        {
                            foreach (var expense in Model.Expenses)
                            {
                                <tr>
                                    <td>@expense.Title</td>
                                    <td>@expense.Amount.ToString("C")</td>
                                    <td style="word-wrap: break-word; white-space: normal;">
                                        @Html.Raw(WordWrap(expense.Description, 7))
                                    </td>

                                    <td style="white-space: nowrap;">
                                        @expense.ExpenseDate.ToString("dd-MM-yyyy")
                                    </td>

                                    <td>
                                        @* Fetch the category name from Model.Categories using the CategoryId *@
                                        @{
                                            var category = Model.Categories.FirstOrDefault(c => c.CategoryId == expense.CategoryId);
                                            var categoryName = category != null ? category.Title : "Unknown Category"; // Handle null case
                                        }
                                        @categoryName
                                    </td>

                                    <td>
                                        <div class="d-flex justify-content-between">
                                           @*  <a asp-action="Edit" asp-route-id="@expense.ExpenseId" class="btn btn-sm btn-primary me-1">Edit</a> *@

                                            <a href="javascript:void(0);" class="btn btn-sm btn-primary" data-income-id="@expense.ExpenseId" onclick="loadEditExpenseForm('@expense.ExpenseId')">Edit</a>
                                            <a href="javascript:void(0);" class="btn btn-sm btn-danger"
                                               onclick="showDeleteExpenseModal('@expense.ExpenseId', '@expense.Title', '@expense.Amount', '@expense.ExpenseDate.ToString("dd-MM-yyyy")')">
                                                Delete
                                            </a>

                                        </div>
                                    </td>

                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center">No expenses found</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal for adding expense -->
<div class="modal fade" id="addExpenseModal" tabindex="-1" aria-labelledby="addExpenseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addExpenseModalLabel">Add Expense</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="CreateExpense" method="post">
                    <div class="mb-3">
                        <label for="Title" class="form-label">Title</label>
                        <input type="text" class="form-control" id="Title" name="Title" required>
                    </div>
                    <div class="mb-3">
                        <label for="Amount" class="form-label">Amount</label>
                        <input type="number" class="form-control" id="Amount" name="Amount" required>
                    </div>
                    <div class="mb-3">
                        <label for="Description" class="form-label">Description</label>
                        <textarea class="form-control" id="Description" name="Description"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="ExpenseDate" class="form-label">Expense Date</label>
                        <input type="date" class="form-control" id="ExpenseDate" name="ExpenseDate" required>
                    </div>
                    <div class="mb-3">
                        <label for="CategoryId" class="form-label">Category</label>
                        <select class="form-control" id="CategoryId" name="CategoryId" required>
                            <option value="">Select a Category</option>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category.CategoryId">@category.Title</option>
                            }
                        </select>
                    </div>
                    <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add Expense</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<!-- Modal for editing expense -->
<div class="modal fade" id="editExpenseModal" tabindex="-1" aria-labelledby="editExpenseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editExpenseModalLabel">Edit Expense</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Placeholder for partial view -->
                <div id="editExpenseContent"></div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="deleteExpenseModal" tabindex="-1" aria-labelledby="deleteExpenseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteExpenseModalLabel">Confirm Delete Expense</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this expense?</p>
                <ul>
                    <li><strong>Title:</strong> <span id="expenseTitle"></span></li>
                    <li><strong>Amount:</strong> <span id="expenseAmount"></span></li>
                    <li><strong>Date:</strong> <span id="expenseDate"></span></li>
                </ul>
                <input type="hidden" id="expenseIdToDelete" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDeleteExpense()">Delete</button>
            </div>
        </div>
    </div>
</div>





    <script>

    // Function to load the edit expense form into the modal
    function loadEditExpenseForm(expenseId) {
        $.ajax({
            url: '/Expenses/Edit/' + expenseId, // Controller action to get edit view
            type: 'GET',
            success: function (result) {
                $('#editExpenseContent').html(result); // Load partial view into modal
                $('#editExpenseModal').modal('show');
            },
            error: function () {
                alert('An error occurred while loading the expense details.');
            }
        });
    }

    // // AJAX call to submit the form for editing expense
    // $('#editExpenseContent').on('submit', '#editExpenseForm', function (e) {
    //     e.preventDefault();

    //     var formData = $(this).serialize();

    //     $.ajax({
    //         url: '/Expenses/UpdateExpense', // Action for updating expense
    //         type: 'POST',
    //         data: formData,
    //         success: function () {
    //             $('#editExpenseModal').modal('hide');
    //             location.reload(); // Reload the page or update list
    //         },
    //         error: function () {
    //             alert('An error occurred while updating the expense.');
    //         }
    //     });
    // });




   


    

    function confirmDeleteExpense() {
        var expenseId = $('#expenseIdToDelete').val();

        $.ajax({
            url: '/Expenses/Delete/' + expenseId,
            type: 'POST',
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() // Add anti-forgery token
            },
            success: function (response) {
                // Hide the modal
                $('#deleteExpenseModal').modal('hide');

                // Optionally refresh the page or update the expense list
                location.reload();
            },
            error: function (xhr) {
                alert('An error occurred while deleting the expense.');
            }
        });
    }


    function showDeleteExpenseModal(expenseId, title, amount, date) {
        // Set the expense details in the modal
        $('#expenseTitle').text(title);
        $('#expenseAmount').text(amount);
        $('#expenseDate').text(date);
        $('#expenseIdToDelete').val(expenseId);

        // Show the modal
        $('#deleteExpenseModal').modal('show');
    }




    </script>